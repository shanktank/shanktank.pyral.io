{"version":3,"sources":["img/github.svg","img/linkedin.svg","img/mail.svg","components/Link.js","components/Links.js","components/Content.js","components/Contents.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Link","props","react_default","a","createElement","className","src","icon","alt","Links","_this","Object","classCallCheck","this","_super","call","state","icons","iconLinkedIn","iconGitHub","iconMail","links","_this2","renderLinks","map","index","key","href","target","rel","components_Link","React","Component","Content","showModal","currentProject","project","setState","event","document","addEventListener","handlePressEscape","_this3","removeEventListener","wrapperRef","contains","button","handleCloseModal","window","keyCode","concat","repo","name","url","push","lib_default","ariaHideApp","isOpen","controls","width","webm","type","_this4","renderTiles","tiles","id","image","onClick","handleOpenModal","renderProject","Contents","modalRef","projects","node","src_components_Content","onTileClick","handleModal","App","src_components_Links","src_components_Contents","Boolean","location","hostname","match","ReactDOM","render","StrictMode","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab70ce66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.192a6620.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.9e36c8fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.e93d5761.svg\";","import React from 'react';\nimport './Link.css';\n\nfunction Link(props) {\n    return <img className=\"tab-image\" src={props.icon} alt=\"icon\"/>;\n}\n\nexport default Link\n","import React from 'react';\nimport Link from './Link';\nimport iconLinkedIn from '../img/linkedin.svg';\nimport iconGitHub from '../img/github.svg';\nimport iconMail from '../img/mail.svg';\nimport './Links.css';\n\nclass Links extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            icons : [ iconLinkedIn, iconGitHub, iconMail ],\n            links : [ \"https://linkedin.com/in/jaredjpruett\", \"https://github.com/shanktank\", \"/\" ],\n        };\n    }\n\n    render() {\n        const renderLinks = this.state.icons.map((icon, index) => \n            <div className=\"Link\" key={index}>\n                <a href={this.state.links[index]} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Link icon={icon}/>\n                </a>\n            </div>\n        );\n\n        return <div className=\"Links\">{renderLinks}</div>\n    }\n}\n\nexport default Links\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport iconGitHub from \"../img/github.svg\";\nimport \"./Content.css\";\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            currentProject: {},\n        };\n    }\n\n    handleOpenModal(project) { this.setState({ showModal: true, currentProject: project }); }\n    handleCloseModal(event)  { this.setState({ showModal: false }); }\n    //componentDidMount()    { document.addEventListener('mousedown', (event)=>this.handleCloseModal(event)); document.addEventListener(\"keydown\", this.handlePressEscape); }\n    //componentWillUnmount() { document.removeEventListener('mousedown', (event)=>this.handleCloseModal(event)); document.removeEventListener(\"keydown\", this.handlePressEscape); }\n    componentDidMount()      { document.addEventListener(\"keydown\", (event)=>this.handlePressEscape(event)); }\n    componentWillUnmount()   { document.removeEventListener(\"keydown\", (event)=>this.handlePressEscape(event)); }\n\n    handleClickOutside(event) {\n        if(this.wrapperRef && !this.wrapperRef.contains(event.target) && this.state.showModal && event.button === 0) {\n            this.handleCloseModal();\n        }\n    }\n\n    handlePressEscape(event) {\n        if(this.state.showModal) {\n            event = event || window.event;\n            if(event.keyCode === 27 && this.state.showModal) {\n                this.handleCloseModal();\n            }\n        }\n    }\n\n    renderProject(project) {\n        let links = [\n            <li>\n                <a href={`https://github.com/jaredjpruett/${project.repo}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img className=\"project-icon\" src={iconGitHub} alt=\"icon\"/>\n                </a>\n                {project.name}\n            </li>\n        ];\n\n        if(project.url) {\n            links.push(<a href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">Hosted</a>);\n        }\n\n        return (\n            <ReactModal className=\"content-modal\" ariaHideApp={false} isOpen={this.state.showModal}>\n                <div className=\"foo\">\n                    <video controls width=\"1000\">\n                        <source src={`vid/${project.webm}`} type=\"video/webm\"/>\n                    </video>\n                </div>\n                <div className=\"repo-link\">\n                    <ul>{links}</ul>\n                </div>\n            </ReactModal>\n        );\n    }\n\n    render() {\n        const renderTiles = this.props.tiles.map((project, index) => {\n            return (\n                <div className=\"Tile image-container\" id={project.name} key={index}>\n                    <img className=\"content-image\" src={`img/${project.image}`} alt=\"img\" onClick={()=>this.handleOpenModal(project)}/>\n                    <div className=\"after\" onClick={()=>this.handleOpenModal(project)}>{project.name}</div>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"Content\">\n                <div className=\"Tiles\">{renderTiles}</div>\n                {this.renderProject(this.state.currentProject)}\n            </div>\n        );\n    }\n}\n\nexport default Content;\n","import React from 'react';\nimport Content from './Content';\nimport \"./Contents.css\";\n\nclass Contents extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalRef : null,\n            projects : [\n                { name : \"Clocker\",                    image : \"clocker.png\",  webm : \"clocker.webm\",  repo : \"cs-clocker\",                    url : \"/stuff/projects/clocker/index.html\" },\n                { name : \"Cygwin + Eclipse Installer\", image : \"project2.png\", webm : \"project2.webm\", repo : \"cygwin-plus-eclipse-installer\", url : \"\" },\n                { name : \"Neoplayer\",                  image : \"project3.png\", webm : \"project3.webm\", repo : \"neoplayer2\",                    url : \"\" },\n                { name : \"ICU+\",                       image : \"project4.png\", webm : \"project4.webm\", repo : \"icu\",                           url : \"\" },\n                { name : \"OpenOSRS Plugins\",           image : \"project5.png\", webm : \"project5.webm\", repo : \"openosrs-plugins\",              url : \"\" },\n            ],\n        };\n    }\n\n    handleModal(node) {\n        this.setState({ modalRef : node });\n    }\n\n    render() {\n        return (\n            <Content className=\"Contents\" tiles={this.state.projects} onTileClick={(node)=>this.handleModal(node)}/>\n        );\n    }\n}\n\nexport default Contents\n","import React from 'react';\nimport Links from './Links';\nimport Contents from './Contents';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"div-root\">\n                <div id=\"div-left\"><Links/></div>\n                <div id=\"div-right\"><Contents/></div>\n                <div id=\"div-notice\"><p>(Most images and videos are currently placeholders!)</p></div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<React.StrictMode><App/></React.StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}